{"version":3,"sources":["../../../../src/listeners/application-commands/context-menu/CorePossibleContextMenuCommand.ts"],"names":[],"mappings":";;;;AAEA,SAAS,gBAAgB;AACzB,SAAS,cAAc;AAEhB,IAAM,eAAN,cAA2B,SAAmD;AAAA,EAC7E,YAAY,SAA2B;AAC7C,UAAM,SAAS,EAAE,OAAO,OAAO,2BAA2B,CAAC;AAAA,EAC5D;AAAA,EAEO,IAAI,aAAqC;AAC/C,UAAM,EAAE,QAAQ,OAAO,IAAI,KAAK;AAChC,UAAM,eAAe,OAAO,IAAI,UAAU;AAE1C,UAAM,UAAU,aAAa,IAAI,YAAY,SAAS,KAAK,aAAa,IAAI,YAAY,WAAW;AACnG,QAAI,CAAC,SAAS;AACb,aAAO,KAAK,OAAO,2BAA2B;AAAA,QAC7C;AAAA,QACA,SAAS,EAAE,WAAW,YAAY,WAAW,aAAa,YAAY,YAAY;AAAA,MACnF,CAAC;AACD;AAAA,IACD;AAEA,QAAI,CAAC,QAAQ,gBAAgB;AAC5B,aAAO,KAAK,OAAO,6CAA6C;AAAA,QAC/D;AAAA,QACA;AAAA,QACA,SAAS,EAAE,WAAW,YAAY,WAAW,aAAa,YAAY,YAAY;AAAA,MACnF,CAAC;AACD;AAAA,IACD;AAEA,WAAO,KAAK,OAAO,0BAA0B;AAAA,MAC5C;AAAA,MACA,SAAS,EAAE,WAAW,YAAY,WAAW,aAAa,YAAY,YAAY;AAAA,MAClF;AAAA,IACD,CAAC;AAAA,EACF;AACD;AAjCa","sourcesContent":["import type { ContextMenuInteraction } from 'discord.js';\nimport type { ContextMenuCommand } from '../../../lib/structures/Command';\nimport { Listener } from '../../../lib/structures/Listener';\nimport { Events } from '../../../lib/types/Events';\n\nexport class CoreListener extends Listener<typeof Events.PossibleContextMenuCommand> {\n\tpublic constructor(context: Listener.Context) {\n\t\tsuper(context, { event: Events.PossibleContextMenuCommand });\n\t}\n\n\tpublic run(interaction: ContextMenuInteraction) {\n\t\tconst { client, stores } = this.container;\n\t\tconst commandStore = stores.get('commands');\n\n\t\tconst command = commandStore.get(interaction.commandId) ?? commandStore.get(interaction.commandName);\n\t\tif (!command) {\n\t\t\tclient.emit(Events.UnknownContextMenuCommand, {\n\t\t\t\tinteraction,\n\t\t\t\tcontext: { commandId: interaction.commandId, commandName: interaction.commandName }\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tif (!command.contextMenuRun) {\n\t\t\tclient.emit(Events.CommandDoesNotHaveContextMenuCommandHandler, {\n\t\t\t\tcommand,\n\t\t\t\tinteraction,\n\t\t\t\tcontext: { commandId: interaction.commandId, commandName: interaction.commandName }\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tclient.emit(Events.PreContextMenuCommandRun, {\n\t\t\tcommand: command as ContextMenuCommand,\n\t\t\tcontext: { commandId: interaction.commandId, commandName: interaction.commandName },\n\t\t\tinteraction\n\t\t});\n\t}\n}\n"]}
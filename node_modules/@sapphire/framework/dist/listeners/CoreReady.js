'use strict';

var Listener_js = require('../lib/structures/Listener.js');
var Events_js = require('../lib/types/Events.js');
var ApplicationCommandRegistries_js = require('../lib/utils/application-commands/ApplicationCommandRegistries.js');

var __defProp = Object.defineProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var CoreEvent = class extends Listener_js.Listener {
  constructor(context) {
    super(context, { event: Events_js.Events.ClientReady, once: true });
  }
  async run() {
    var _a;
    (_a = this.container.client).id ?? (_a.id = this.container.client.user?.id ?? null);
    this.container.logger.info(`ApplicationCommandRegistries: Initializing...`);
    const now = Date.now();
    await ApplicationCommandRegistries_js.handleRegistryAPICalls();
    const diff = Date.now() - now;
    this.container.logger.info(`ApplicationCommandRegistries: Took ${diff.toLocaleString()}ms to initialize.`);
  }
};
__name(CoreEvent, "CoreEvent");

exports.CoreEvent = CoreEvent;
//# sourceMappingURL=out.js.map
//# sourceMappingURL=CoreReady.js.map
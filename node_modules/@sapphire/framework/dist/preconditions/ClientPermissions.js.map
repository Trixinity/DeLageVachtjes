{"version":3,"sources":["../../src/preconditions/ClientPermissions.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n\tPermissions,\n\ttype BaseGuildTextChannel,\n\ttype CommandInteraction,\n\ttype ContextMenuInteraction,\n\ttype GuildTextBasedChannel,\n\ttype Message,\n\ttype PermissionString\n} from 'discord.js';\nimport { Identifiers } from '../lib/errors/Identifiers';\nimport type { Command } from '../lib/structures/Command';\nimport { AllFlowsPrecondition } from '../lib/structures/Precondition';\n\nexport interface PermissionPreconditionContext extends AllFlowsPrecondition.Context {\n\tpermissions?: Permissions;\n}\n\nexport class CorePrecondition extends AllFlowsPrecondition {\n\tprivate readonly dmChannelPermissions = new Permissions(\n\t\t~new Permissions([\n\t\t\t//\n\t\t\t'ADD_REACTIONS',\n\t\t\t'ATTACH_FILES',\n\t\t\t'EMBED_LINKS',\n\t\t\t'READ_MESSAGE_HISTORY',\n\t\t\t'SEND_MESSAGES',\n\t\t\t'USE_EXTERNAL_EMOJIS',\n\t\t\t'VIEW_CHANNEL'\n\t\t]).bitfield & Permissions.ALL\n\t).freeze();\n\n\tpublic messageRun(message: Message, _: Command, context: PermissionPreconditionContext): AllFlowsPrecondition.Result {\n\t\tconst required = context.permissions ?? new Permissions();\n\t\tconst channel = message.channel as BaseGuildTextChannel;\n\n\t\tif (!message.client.id) {\n\t\t\treturn this.error({\n\t\t\t\tidentifier: Identifiers.PreconditionClientPermissionsNoClient,\n\t\t\t\tmessage: 'There was no client to validate the permissions for.'\n\t\t\t});\n\t\t}\n\n\t\tconst permissions = message.guild ? channel.permissionsFor(message.client.id) : this.dmChannelPermissions;\n\n\t\treturn this.sharedRun(required, permissions, 'message');\n\t}\n\n\tpublic async chatInputRun(interaction: CommandInteraction, _: Command, context: PermissionPreconditionContext): AllFlowsPrecondition.AsyncResult {\n\t\tconst required = context.permissions ?? new Permissions();\n\n\t\tconst channel = (await this.fetchChannelFromInteraction(interaction)) as GuildTextBasedChannel;\n\n\t\tconst permissions = interaction.inGuild() ? channel.permissionsFor(interaction.applicationId) : this.dmChannelPermissions;\n\n\t\treturn this.sharedRun(required, permissions, 'chat input');\n\t}\n\n\tpublic async contextMenuRun(\n\t\tinteraction: ContextMenuInteraction,\n\t\t_: Command,\n\t\tcontext: PermissionPreconditionContext\n\t): AllFlowsPrecondition.AsyncResult {\n\t\tconst required = context.permissions ?? new Permissions();\n\t\tconst channel = (await this.fetchChannelFromInteraction(interaction)) as GuildTextBasedChannel;\n\n\t\tconst permissions = interaction.inGuild() ? channel.permissionsFor(interaction.applicationId) : this.dmChannelPermissions;\n\n\t\treturn this.sharedRun(required, permissions, 'context menu');\n\t}\n\n\tprivate sharedRun(requiredPermissions: Permissions, availablePermissions: Permissions | null, commandType: string) {\n\t\tif (!availablePermissions) {\n\t\t\treturn this.error({\n\t\t\t\tidentifier: Identifiers.PreconditionClientPermissionsNoPermissions,\n\t\t\t\tmessage: `I was unable to resolve my permissions in the ${commandType} command invocation channel.`\n\t\t\t});\n\t\t}\n\n\t\tconst missing = availablePermissions.missing(requiredPermissions);\n\t\treturn missing.length === 0\n\t\t\t? this.ok()\n\t\t\t: this.error({\n\t\t\t\t\tidentifier: Identifiers.PreconditionClientPermissions,\n\t\t\t\t\tmessage: `I am missing the following permissions to run this command: ${missing\n\t\t\t\t\t\t.map((perm) => CorePrecondition.readablePermissions[perm])\n\t\t\t\t\t\t.join(', ')}`,\n\t\t\t\t\tcontext: { missing }\n\t\t\t  });\n\t}\n\n\tpublic static readonly readablePermissions: Record<PermissionString, string> = {\n\t\tADD_REACTIONS: 'Add Reactions',\n\t\tADMINISTRATOR: 'Administrator',\n\t\tATTACH_FILES: 'Attach Files',\n\t\tBAN_MEMBERS: 'Ban Members',\n\t\tCHANGE_NICKNAME: 'Change Nickname',\n\t\tCONNECT: 'Connect',\n\t\tCREATE_INSTANT_INVITE: 'Create Instant Invite',\n\t\tCREATE_PRIVATE_THREADS: 'Create Private Threads',\n\t\tCREATE_PUBLIC_THREADS: 'Create Public Threads',\n\t\tDEAFEN_MEMBERS: 'Deafen Members',\n\t\tEMBED_LINKS: 'Embed Links',\n\t\tKICK_MEMBERS: 'Kick Members',\n\t\tMANAGE_CHANNELS: 'Manage Channels',\n\t\tMANAGE_EMOJIS_AND_STICKERS: 'Manage Emojis and Stickers',\n\t\tMANAGE_EVENTS: 'Manage Events',\n\t\tMANAGE_GUILD: 'Manage Server',\n\t\tMANAGE_MESSAGES: 'Manage Messages',\n\t\tMANAGE_NICKNAMES: 'Manage Nicknames',\n\t\tMANAGE_ROLES: 'Manage Roles',\n\t\tMANAGE_THREADS: 'Manage Threads',\n\t\tMANAGE_WEBHOOKS: 'Manage Webhooks',\n\t\tMENTION_EVERYONE: 'Mention Everyone',\n\t\tMODERATE_MEMBERS: 'Moderate Members',\n\t\tMOVE_MEMBERS: 'Move Members',\n\t\tMUTE_MEMBERS: 'Mute Members',\n\t\tPRIORITY_SPEAKER: 'Priority Speaker',\n\t\tREAD_MESSAGE_HISTORY: 'Read Message History',\n\t\tREQUEST_TO_SPEAK: 'Request to Speak',\n\t\tSEND_MESSAGES_IN_THREADS: 'Send Messages in Threads',\n\t\tSEND_MESSAGES: 'Send Messages',\n\t\tSEND_TTS_MESSAGES: 'Send TTS Messages',\n\t\tSPEAK: 'Speak',\n\t\tSTART_EMBEDDED_ACTIVITIES: 'Start Activities',\n\t\tSTREAM: 'Stream',\n\t\tUSE_APPLICATION_COMMANDS: 'Use Application Commands',\n\t\tUSE_EXTERNAL_EMOJIS: 'Use External Emojis',\n\t\tUSE_EXTERNAL_STICKERS: 'Use External Stickers',\n\t\tUSE_PRIVATE_THREADS: 'Use Private Threads',\n\t\tUSE_PUBLIC_THREADS: 'Use Public Threads',\n\t\tUSE_VAD: 'Use Voice Activity',\n\t\tVIEW_AUDIT_LOG: 'View Audit Log',\n\t\tVIEW_CHANNEL: 'Read Messages',\n\t\tVIEW_GUILD_INSIGHTS: 'View Guild Insights'\n\t};\n}\n"]}
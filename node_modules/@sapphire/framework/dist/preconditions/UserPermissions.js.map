{"version":3,"sources":["../../src/preconditions/UserPermissions.ts"],"names":[],"mappings":";;;;AAAA,SAAS,mBAA2H;AACpI,SAAS,mBAAmB;AAE5B,SAAS,4BAA4B;AACrC,SAAS,oBAAoB,0BAA8D;AAEpF,IAAM,mBAAN,cAA+B,qBAAqB;AAAA,EAApD;AAAA;AACN,SAAiB,uBAAuB,IAAI;AAAA,MAC3C,CAAC,IAAI,YAAY;AAAA,QAChB;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACD,CAAC,EAAE,WAAW,YAAY;AAAA,IAC3B,EAAE,OAAO;AAAA;AAAA,EAEF,WAAW,SAAkB,UAAmB,SAAqE;AAC3H,UAAM,WAAW,QAAQ,eAAe,IAAI,YAAY;AACxD,UAAM,UAAU,QAAQ;AACxB,UAAM,cAAc,QAAQ,QAAQ,QAAQ,eAAe,QAAQ,MAAM,IAAI,KAAK;AAElF,WAAO,KAAK,UAAU,UAAU,aAAa,SAAS;AAAA,EACvD;AAAA,EAEO,aAAa,aAAiC,UAAmB,SAAqE;AAC5I,UAAM,WAAW,QAAQ,eAAe,IAAI,YAAY;AACxD,UAAM,cAAc,YAAY,UAAU,YAAY,oBAAoB,KAAK;AAE/E,WAAO,KAAK,UAAU,UAAU,aAAa,YAAY;AAAA,EAC1D;AAAA,EAEO,eACN,aACA,UACA,SAC8B;AAC9B,UAAM,WAAW,QAAQ,eAAe,IAAI,YAAY;AACxD,UAAM,cAAc,YAAY,UAAU,YAAY,oBAAoB,KAAK;AAE/E,WAAO,KAAK,UAAU,UAAU,aAAa,cAAc;AAAA,EAC5D;AAAA,EAEQ,UAAU,qBAAkC,sBAA0C,aAAkD;AAC/I,QAAI,CAAC,sBAAsB;AAC1B,aAAO,KAAK,MAAM;AAAA,QACjB,YAAY,YAAY;AAAA,QACxB,SAAS,6DAA6D;AAAA,MACvE,CAAC;AAAA,IACF;AAEA,UAAM,UAAU,qBAAqB,QAAQ,mBAAmB;AAChE,WAAO,QAAQ,WAAW,IACvB,KAAK,GAAG,IACR,KAAK,MAAM;AAAA,MACX,YAAY,YAAY;AAAA,MACxB,SAAS,kEAAkE,QACzE,IAAI,CAAC,SAAS,mBAAmB,oBAAoB,KAAK,EAC1D,KAAK,IAAI;AAAA,MACX,SAAS,EAAE,QAAQ;AAAA,IACnB,CAAC;AAAA,EACL;AACD;AA5Da","sourcesContent":["import { Permissions, type CommandInteraction, type ContextMenuInteraction, type Message, type NewsChannel, type TextChannel } from 'discord.js';\nimport { Identifiers } from '../lib/errors/Identifiers';\nimport type { Command } from '../lib/structures/Command';\nimport { AllFlowsPrecondition } from '../lib/structures/Precondition';\nimport { CorePrecondition as ClientPrecondition, type PermissionPreconditionContext } from './ClientPermissions';\n\nexport class CorePrecondition extends AllFlowsPrecondition {\n\tprivate readonly dmChannelPermissions = new Permissions(\n\t\t~new Permissions([\n\t\t\t'ADD_REACTIONS',\n\t\t\t'ATTACH_FILES',\n\t\t\t'EMBED_LINKS',\n\t\t\t'READ_MESSAGE_HISTORY',\n\t\t\t'SEND_MESSAGES',\n\t\t\t'USE_EXTERNAL_EMOJIS',\n\t\t\t'VIEW_CHANNEL',\n\t\t\t'USE_EXTERNAL_STICKERS',\n\t\t\t'MENTION_EVERYONE'\n\t\t]).bitfield & Permissions.ALL\n\t).freeze();\n\n\tpublic messageRun(message: Message, _command: Command, context: PermissionPreconditionContext): AllFlowsPrecondition.Result {\n\t\tconst required = context.permissions ?? new Permissions();\n\t\tconst channel = message.channel as TextChannel | NewsChannel;\n\t\tconst permissions = message.guild ? channel.permissionsFor(message.author) : this.dmChannelPermissions;\n\n\t\treturn this.sharedRun(required, permissions, 'message');\n\t}\n\n\tpublic chatInputRun(interaction: CommandInteraction, _command: Command, context: PermissionPreconditionContext): AllFlowsPrecondition.Result {\n\t\tconst required = context.permissions ?? new Permissions();\n\t\tconst permissions = interaction.guildId ? interaction.memberPermissions : this.dmChannelPermissions;\n\n\t\treturn this.sharedRun(required, permissions, 'chat input');\n\t}\n\n\tpublic contextMenuRun(\n\t\tinteraction: ContextMenuInteraction,\n\t\t_command: Command,\n\t\tcontext: PermissionPreconditionContext\n\t): AllFlowsPrecondition.Result {\n\t\tconst required = context.permissions ?? new Permissions();\n\t\tconst permissions = interaction.guildId ? interaction.memberPermissions : this.dmChannelPermissions;\n\n\t\treturn this.sharedRun(required, permissions, 'context menu');\n\t}\n\n\tprivate sharedRun(requiredPermissions: Permissions, availablePermissions: Permissions | null, commandType: string): AllFlowsPrecondition.Result {\n\t\tif (!availablePermissions) {\n\t\t\treturn this.error({\n\t\t\t\tidentifier: Identifiers.PreconditionUserPermissionsNoPermissions,\n\t\t\t\tmessage: `I was unable to resolve the end-user's permissions in the ${commandType} command invocation channel.`\n\t\t\t});\n\t\t}\n\n\t\tconst missing = availablePermissions.missing(requiredPermissions);\n\t\treturn missing.length === 0\n\t\t\t? this.ok()\n\t\t\t: this.error({\n\t\t\t\t\tidentifier: Identifiers.PreconditionUserPermissions,\n\t\t\t\t\tmessage: `You are missing the following permissions to run this command: ${missing\n\t\t\t\t\t\t.map((perm) => ClientPrecondition.readablePermissions[perm])\n\t\t\t\t\t\t.join(', ')}`,\n\t\t\t\t\tcontext: { missing }\n\t\t\t  });\n\t}\n}\n"]}
'use strict';

var discord_jsUtilities = require('@sapphire/discord.js-utilities');
var Identifiers_js = require('../lib/errors/Identifiers.js');
var Precondition_js = require('../lib/structures/Precondition.js');

var __defProp = Object.defineProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var CorePrecondition = class extends Precondition_js.AllFlowsPrecondition {
  messageRun(message) {
    return discord_jsUtilities.isVoiceChannel(message.channel) ? this.ok() : this.error({
      identifier: Identifiers_js.Identifiers.PreconditionGuildVoiceOnly,
      message: "You can only run this message command in server voice channels."
    });
  }
  async chatInputRun(interaction) {
    const channel = await this.fetchChannelFromInteraction(interaction);
    return discord_jsUtilities.isVoiceChannel(channel) ? this.ok() : this.error({
      identifier: Identifiers_js.Identifiers.PreconditionGuildVoiceOnly,
      message: "You can only run this chat input command in server voice channels."
    });
  }
  async contextMenuRun(interaction) {
    const channel = await this.fetchChannelFromInteraction(interaction);
    return discord_jsUtilities.isVoiceChannel(channel) ? this.ok() : this.error({
      identifier: Identifiers_js.Identifiers.PreconditionGuildVoiceOnly,
      message: "You can only run this context menu command in server voice channels."
    });
  }
};
__name(CorePrecondition, "CorePrecondition");

exports.CorePrecondition = CorePrecondition;
//# sourceMappingURL=out.js.map
//# sourceMappingURL=GuildVoiceOnly.js.map
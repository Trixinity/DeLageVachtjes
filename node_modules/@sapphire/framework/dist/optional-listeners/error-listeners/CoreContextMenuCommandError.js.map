{"version":3,"sources":["../../../src/optional-listeners/error-listeners/CoreContextMenuCommandError.ts"],"names":[],"mappings":";;;;AAAA,SAAS,gBAAgB;AACzB,SAAS,cAAmD;AAErD,IAAM,YAAN,cAAwB,SAAgD;AAAA,EACvE,YAAY,SAA2B;AAC7C,UAAM,SAAS,EAAE,OAAO,OAAO,wBAAwB,CAAC;AAAA,EACzD;AAAA,EAEO,IAAI,OAAgB,SAAyC;AACnE,UAAM,EAAE,MAAM,SAAS,IAAI,QAAQ;AACnC,SAAK,UAAU,OAAO,MAAM,yCAAyC,kBAAkB,SAAS,SAAS,KAAK;AAAA,EAC/G;AACD;AATa","sourcesContent":["import { Listener } from '../../lib/structures/Listener';\nimport { Events, type ContextMenuCommandErrorPayload } from '../../lib/types/Events';\n\nexport class CoreEvent extends Listener<typeof Events.ContextMenuCommandError> {\n\tpublic constructor(context: Listener.Context) {\n\t\tsuper(context, { event: Events.ContextMenuCommandError });\n\t}\n\n\tpublic run(error: unknown, context: ContextMenuCommandErrorPayload) {\n\t\tconst { name, location } = context.command;\n\t\tthis.container.logger.error(`Encountered error on message command \"${name}\" at path \"${location.full}\"`, error);\n\t}\n}\n"]}